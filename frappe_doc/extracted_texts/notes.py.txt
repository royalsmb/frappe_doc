import frappe
from utgbuddy.app.agent import agent as _agent
from typing import Optional
from textwrap import dedent


@frappe.whitelist(allow_guest=True)
def enqueue_gengerate_smart_notes(library_id):
    frappe.enqueue('utgbuddy.app.notes.generate_smart_notes', library_id = library_id, queue='long')
    return "Agent enqueued successfully"

@frappe.whitelist(allow_guest=True)
def generate_smart_notes(library_id):
    # Initialize our specialized notes generation agent
    agent = _agent(collection_name=library_id,
        description="You are an expert Note-Taking Specialist, skilled at creating clear, comprehensive, and well-structured study notes that enhance understanding and retention.")
    # Initial content analysis for effective note creation
    content_analysis_prompt = """
    Analyze the educational content with these specific objectives:

    First, understand the overall structure and flow of the material:
    - Identify the main topic and its core components
    - Recognize how different concepts connect and build upon each other
    - Map out the logical progression of ideas
    - Identify key principles, theories, and their applications

    Next, examine the depth and complexity of the content:
    - Determine which concepts need detailed explanation
    - Identify areas that require examples or illustrations
    - Note any prerequisites or foundational knowledge
    - Recognize potential areas of confusion or difficulty

    Then, consider the practical applications:
    - Find real-world examples that illustrate concepts
    - Identify problem-solving approaches
    - Note any practical skills or techniques
    - Consider how theories apply in different contexts

    Finally, look for ways to enhance understanding:
    - Identify opportunities for visual representations
    - Note where analogies or comparisons would be helpful
    - Find connections to familiar concepts
    - Consider different learning perspectives

    Provide a detailed analysis that will guide the creation of effective study notes.
    """

    retrieved_docs = agent.get_relevant_docs_from_knowledge(
        content_analysis_prompt,
        num_documents=5
    )

    # Generate comprehensive study notes
    notes_generation_prompt = f"""
    Create detailed study notes based on the following content:

    Source Material: {retrieved_docs}

    Format the notes following these principles:

    1. Overall Structure
    Begin with a clear overview that:
    - Introduces the main topic
    - Outlines key concepts to be covered
    - Explains why this material is important
    - Shows how concepts connect to each other

    2. Content Organization
    For each major concept:
    - Start with a clear definition or explanation
    - Provide detailed supporting information
    - Include relevant examples and applications
    - Add diagrams or visual descriptions where helpful
    - Connect to previously covered material
    - Address common misconceptions
    - Include practice problems or application exercises

    3. Writing Style
    Use these techniques:
    - Clear, precise language
    - Logical flow between ideas
    - Consistent terminology
    - Active voice for better engagement
    - Appropriate technical detail
    - Analogies and comparisons for clarity

    4. Enhancement Features
    Include:
    - Key terms and their definitions
    - Important formulas and equations
    - Step-by-step procedures
    - Critical thinking questions
    - Memory aids and mnemonics
    - Quick reference summaries
    - Practice problems and solutions

    5. Format Guidelines
    Structure the notes with:
    - Clear headings and subheadings
    - Consistent formatting
    - Appropriate spacing
    - Emphasis on key points
    - Numbered steps for procedures
    - Indentation for related concepts

    Format the output as a detailed markdown document that's easy to read and study from.
    """

    # Generate the study notes
    notes = agent.run(notes_generation_prompt, markdown=True).get_content_as_string()

    # Process and store the notes
    def save_study_notes(content):
        """
        Save the generated notes with proper formatting and organization
        """
        doc = frappe.get_doc("Student Library", library_id)
        
        # Extract title from content
        # title = content.split('\n')[0].replace('#', '').strip()
        
        # doc.title = title
        doc.content = content
        
        
        doc.save()
        frappe.db.commit()
        
        return doc

    # Save the generated notes
    saved_notes = save_study_notes(notes)

    return saved_notes



    # return doc

@frappe.whitelist(allow_guest=True)
def study_plan_agent():
    agent = _agent("econ_ee")
    content_analysis_prompt = """
    Analyze the educational materials with these specific objectives:

    1. Core Content Analysis
    - Identify fundamental concepts and principles
    - Map prerequisite knowledge requirements
    - Detect advanced topics and their dependencies
    - Note practical applications and real-world relevance

    2. Learning Progression
    - Determine optimal learning sequence
    - Identify concept dependencies
    - Plan knowledge scaffolding
    - Consider cognitive load management

    3. Learning Objectives
    - Define clear learning outcomes
    - Identify key skills to be developed
    - Plan practical applications
    - Consider assessment points

    Provide a detailed analysis that will inform a comprehensive study plan.
    """

    retrieved_docs = agent.get_relevant_docs_from_knowledge(
        content_analysis_prompt,
        num_documents=3
    )

    # Step 2: Generate comprehensive study plan
    study_plan_prompt = f"""
    Create a detailed study plan based on the following content:

    Source Material: {retrieved_docs}

    Generate a comprehensive study plan that includes:

    1. Learning Path Structure
    - Create a clear progression from fundamental to advanced concepts
    - Include estimated time requirements for each major topic
    - Note important prerequisites for each section
    - Identify key milestones and checkpoints

    2. Topic Details
    - Provide detailed explanations of each concept
    - Include practical examples and applications
    - Reference relevant formulas or principles
    - Highlight common misconceptions or challenging aspects

    3. Learning Resources
    - Suggest practice problems or exercises
    - Recommend study techniques for complex topics
    - Include self-assessment guidelines
    - Note areas requiring special attention

    4. Success Criteria
    - Define clear indicators of understanding
    - Include practical application benchmarks
    - Suggest review and reinforcement activities
    - Provide progress tracking guidelines

    Format the output as a detailed markdown document with clear sections, 
    subsections, and explanations. Include practical examples and 
    application scenarios where relevant.
    """

    # Generate the detailed study plan
    study_plan = agent.run(study_plan_prompt, markdown=True).get_content_as_string()
    doc = frappe.new_doc("Subject")
    doc.title = "Econ ee"  
    doc.content = "\n\n".join(study_plan)
    doc.db_insert()
    frappe.db.commit()

    return study_plan
