import frappe
from frappe.utils import cint, flt


@frappe.whitelist()
def get_item_by_warehouse(filters, warehouse=None):

    pos_profile = ""
    if frappe.db.exists("POS Shift", {"status": "Open", "owner": frappe.session.user}):
        pos_profile = frappe.get_value(
            "POS Shift", {"status": "Open", "owner": frappe.session.user}, "pos_profile")

    if pos_profile:
        pos_profile_doc = frappe.get_doc("POS Profile", pos_profile)
        if pos_profile_doc.fetch_items_base_on_warehouse and warehouse:
            return get_items(filters, warehouse)
        else:
            return get_items(filters)


@frappe.whitelist()
def get_items(filters, warehouse=None):

    data = []
    items = frappe.get_all("Item", filters, ["name", "item_name", "item_group", "description", "image"], order_by="name")


    for item in items:
        # Get full item document to check for variants
        item_doc = frappe.get_doc("Item", item.name)
        # is_true if item is having stock if not the is true if item is having bom 
        is_stock = True if cint(frappe.db.get_value("Item", item_doc.name, "is_stock_item")) == 1 else False

        qty = frappe.db.get_value(
                    "Bin", {"item_code": item.name, "warehouse": warehouse}, "actual_qty"
                )
        
        # Check if item has variants
        if item_doc.has_variants:
            variant_items = []
            variants = frappe.get_all("Item",
                                      filters={
                                          "variant_of": item.name, "disabled": 0},
                                      fields=["name", "item_code",
                                              "item_name", "item_group"],
                                      order_by="name",
                                      limit_page_length=20
                                      )

            from_price = 0
            total_variant_qty = 0
            variant_price_list = []

            for variant in variants:
                variant_is_true = True if cint(frappe.db.get_value("Item", variant.item_code, "is_stock_item")) == 1 else False
                # Apply warehouse filtering for variants
                if warehouse:
                    # Check if variant exists in the specified warehouse
                    variant_defaults = frappe.get_all("Item Default",
                                                      filters={
                                                          "parent": variant.item_code,
                                                          "default_warehouse": warehouse
                                                      },
                                                      fields=[
                                                          "default_warehouse", "company"]
                                                      )

                    if not variant_defaults:
                        continue

                variant_qty = frappe.db.get_value(
                        "Bin", {"item_code": variant.item_code, "warehouse": warehouse}, "actual_qty") or 0

             

                total_variant_qty += flt(variant_qty)

                # Get variant price
                variant_price = flt(frappe.db.get_value(
                    "Item Price", {"item_code": variant.item_code, "price_list": "Standard Selling"}, "price_list_rate",) or 0)

                variant_price_list.append(variant_price)
                variant_items.append({
                    "name": variant.name,
                    "product_name": variant.item_name,
                    "price": variant_price,
                    "is_stock": variant_is_true,
                    "qty": flt(variant_qty),

                })

            # Only add if there are variants
            if variant_items:
                data.append({
                    "name": item.name,
                    "product_name": item_doc.item_name,
                    "category": item_doc.item_group,
                    "price": min(variant_price_list) if variant_price_list else 0,
                    "description": item_doc.description or "",
                    "image": frappe.utils.get_url(item_doc.image) if item_doc.image else "",
                    "warehouse": warehouse,
                    "variants": variant_items,
                    "qty": total_variant_qty,
                    "barcodes": frappe.get_all("Item Barcode", {"parent": item.name}, pluck="barcode")
                })
        else:
            # Handle non-variant items as before
            item_price = frappe.db.get_value("Item Price", {
                                             "item_code": item.name, "price_list": "Standard Selling"}, "price_list_rate")
            if warehouse:
                
                item_defaults = frappe.get_all("Item Default", {
                                               "parent": item.name, "default_warehouse": warehouse}, ["default_warehouse", "company"])
                for item_default in item_defaults:
                    if item_default.default_warehouse == warehouse:
                        data.append({
                            "name": item.name,
                            "product_name": item.item_name,
                            "category": item.item_group,
                            "price": item_price,
                            "description": item.description,
                            "image": frappe.utils.get_url(item.image) if item.image else "",
                            "is_stock": is_stock,
                            "qty": flt(qty),
                            "barcodes": frappe.get_all("Item Barcode", {"parent": item.name}, pluck="barcode"),
                            "warehouse": item_default.default_warehouse,
                            "company": item_default.company
                        })
            else:
                data.append({
                    "name": item.name,
                    "product_name": item.item_name,
                    "category": item.item_group,
                    "price": item_price,
                    "description": item.description,
                    "image": frappe.utils.get_url(item.image) if item.image else "",
                    "is_stock": is_stock,
                    "qty": flt(qty),
                    "barcodes": frappe.get_all("Item Barcode", {"parent": item.name}, pluck="barcode")
                })

    return data

