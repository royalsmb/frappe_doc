import { e as stringify, d as slot, f as bind_props, c as pop, p as push } from "./index2.js";
import { N as fallback } from "./utils.js";
import { a as attr } from "./attributes.js";
import { e as randomString } from "./fetcher.js";
import { e as escape_html } from "./escaping.js";
function Container($$payload, $$props) {
  let klass = fallback($$props["class"], "");
  let paddingX = fallback($$props["paddingX"], "16px");
  $$payload.out += `<section${attr("class", `container-max-width mx-auto ${stringify(klass)}`)}${attr("style", `--container-padding: ${stringify(paddingX)}`)}><!---->`;
  slot($$payload, $$props, "default", {});
  $$payload.out += `<!----></section>`;
  bind_props($$props, { class: klass, paddingX });
}
function Label($$payload, $$props) {
  push();
  let id = fallback($$props["id"], () => randomString(5), true);
  let text = fallback($$props["text"], "");
  $$payload.out += `<label class="small-text mb-2 block font-medium"${attr("for", id)}>${escape_html(text)}</label>`;
  bind_props($$props, { id, text });
  pop();
}
export {
  Container as C,
  Label as L
};
