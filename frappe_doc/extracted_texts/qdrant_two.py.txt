import os
import typer
from typing import Optional
from rich.prompt import Prompt
from textwrap import dedent

from agno.agent import Agent, AgentMemory
from agno.knowledge.pdf import PDFKnowledgeBase, PDFReader
from agno.vectordb.qdrant import Qdrant
from agno.embedder.google import GeminiEmbedder
from agno.models.google import Gemini
from agno.memory.db.postgres import PgMemoryDb
from agno.storage.agent.postgres import PostgresAgentStorage

import frappe

# Load environment variables
config = frappe.get_site_config()
os.environ['GOOGLE_API_KEY'] = config.get('gemini_api_key')
os.environ['OPENAI_API_KEY'] = config.get('openai_api_key')
os.environ['GROQ_API_KEY'] = config.get('groq_api_key')

# Database URLs
db_url = "postgresql://neondb_owner:npg_FIHQ24iOyCob@ep-young-night-a8nio0y1-pooler.eastus2.azure.neon.tech/neondb?sslmode=require"
api_key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3MiOiJtIiwiZXhwIjoxNzQ3MjI5MjE2fQ.weYolc0hcULOujUdHZdu3LCbGSM-SazCixrp9CUlcxs"
qdrant_url = "https://eaa94789-6f47-428c-91b5-33ceb3f75187.europe-west3-0.gcp.cloud.qdrant.io:6333"
collection_name = "physics"

# Vector Database
vector_db = Qdrant(
    collection=collection_name,
    url=qdrant_url,
    api_key=api_key,
    embedder=GeminiEmbedder()
)

# Load the PDF Knowledge Base
knowledge_base = PDFKnowledgeBase(
    path="/home/frappe/Documents/embeddings/Tipler_Llewellyn",
    vector_db=vector_db,
    reader=PDFReader(chunk=True),
)

# Load and index the knowledge base (IMPORTANT)
# knowledge_base.load(upsert=True)

@frappe.whitelist(allow_guest=True)
def agent():
    # Create the AI Agent
    agent = Agent(
        knowledge=knowledge_base,
        user_id="utgbuddy",
        model=Gemini(id="gemini-2.0-flash-exp"),
        debug_mode=True,
        show_tool_calls=True,
        search_knowledge=True,
        memory=AgentMemory(
            db=PgMemoryDb(table_name="agent_memory", db_url=db_url), 
            create_user_memories=True, 
            create_session_summary=True
        ),
        storage=PostgresAgentStorage(
            table_name="personalized_agent_sessions", 
            db_url=db_url
        ),
        description="You are a Study Notes Summarizer AI ('UTGBuddy'). Your goal is to summarize content from the knowledge base efficiently.",
        instructions=[
            "1. ALWAYS search the knowledge base before answering.",
            "2. Retrieve ALL relevant documents and synthesize them.",
            "3. If multiple sources exist, merge insights into a clear summary.",
            "4. Structure responses in Markdown format with sections like: Quick Summary, Core Concepts, Formulas, etc.",
            "5. NEVER ask for a specific book title—assume the user has uploaded multiple books.",
            "6. Provide direct citations and references where applicable.",
        ],
        read_chat_history=True,
        add_history_to_messages=True,
        add_datetime_to_instructions=True,
        read_tool_call_history=True,
        num_history_responses=3,
        expected_output=dedent("""\
            A structured study summary in Markdown:

            # {Engaging Topic Title}

            ## Quick Summary  
            {Concise overview of key concepts and their significance}

            ## Core Concepts  
            ### 🔹 Key Definitions  
            - **{Term 1}**: {Definition}  
            - **{Term 2}**: {Definition}  

            ## Important Formulas & Equations  
            > **Formula:** {Equation}  
            > **Application:** {Example of usage}  

            ## Diagrams & Visual Aids  
            📝 *Suggested diagrams:*  
            [Diagram 1](link) – *Explanation*  
            [Diagram 2](link) – *Explanation*

            ## Memory Boosters 🧠  
            - 🔹 **Mnemonics:** {Helpful acronym or trick}  
            - 🔹 **Analogies:** {Comparison to real-life concept}  

            ## Common Pitfalls ❌  
            - **{Misconception 1}** – *Correction*  
            - **{Misconception 2}** – *Correction*  

            ## Exam Tips & Tricks 🎯  
            - **{Tip 1}** – *How to approach this topic in exams*  
            - **{Tip 2}** – *Best strategies for answering questions*  

            ## Key Takeaways 📌  
            - {Bullet point 1}  
            - {Bullet point 2}  
            - {Bullet point 3}  

            ## References & Further Reading 📚  
            - [Source 1](link) – *Concept Explanation*  
            - [Source 2](link) – *Practice Questions*  

            ---
            📖 **Study smarter, not harder!**  
            🔍 **Generated by UTGBuddy**  
            📅 **Date: {current_date}**  
            ⏰ **Time: {current_time}**  
        """),
    )

    # Ensure the agent queries the entire knowledge base before summarizing
    prompt = dedent("""\
        You are a Study Notes Summarizer, designed to generate structured study summaries from multiple sources.
        
        **Task:**  
        - Retrieve and summarize information from ALL documents in the knowledge base.
        - Merge relevant insights and format them using Markdown.
        - Structure the response into sections like Quick Summary, Core Concepts, Formulas, Diagrams, Memory Boosters, etc.
        - Reference source documents where applicable.
        - The response should be optimized for students preparing for exams.

        **Format:**  
        Use the provided Markdown template.
    """)

    response = agent.run(prompt, markdown=True)
    return response.get_content_as_string()
