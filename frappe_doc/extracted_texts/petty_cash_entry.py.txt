# Copyright (c) 2024, Jokoor and contributors
# For license information, please see license.txt

import frappe
from frappe.utils import flt
from frappe.model.document import Document


class PettyCashEntry(Document):
	def validate(self):	
		user = frappe.session.user
		if not frappe.db.exists("Front Desk Shift", {"status": "Open", "owner": user}):
			frappe.throw("You do not have any open shift")
		else:
			shift = frappe.get_doc("Front Desk Shift", {"status": "Open", "owner": user})
			self.shift = shift.name
			
			sift_balance = flt(frappe.db.get_value("Front Desk Shift", shift.name, "remaining_balance"))
			if self.type == "Expense" or self.type == "Bank Deposit":
				if self.amount > shift.remaining_balance:
					frappe.throw("You do not have enough balance in your shift")
		
	def on_submit(self):
		user = frappe.session.user
		shift = frappe.get_doc("Front Desk Shift", {"status": "Open", "owner": user})
		if not shift:
			frappe.throw("You must open a shift to submit petty cash entry")
		sift_balance = flt(shift.remaining_balance)
		if self.type == "Expense" or self.type == "Bank Deposit":
			if self.amount > shift.remaining_balance:
				frappe.throw("You do not have enough balance in your shift")
			else:
				shift.remaining_balance = shift.remaining_balance - flt(self.amount)
		elif self.type == "Income":
			shift.remaining_balance = shift.remaining_balance + flt(self.amount)
		elif self.type == "Bank Deposit":
			shift.remaining_balance = shift.remaining_balance + flt(self.amount)
		# append to eith petty_casch_expense or petty_cash_income
		if self.type == "Expense":
			total_expense = flt(frappe.db.get_value("Front Desk Shift", shift.name, "total_expense")) + flt(self.amount)
			shift.total_expense = total_expense

			shift.append("petty_cash_expense", {
				"id": self.name,
				"date": self.date,
				"amount": self.amount,
				"expense_type": self.expense_type,
				"remark": self.remark
			})
		elif self.type == "Income":
			total_income = flt(frappe.db.get_value("Front Desk Shift", shift.name, "total_income")) + flt(self.amount)
			shift.total_income = total_income
			shift.append("petty_cash_income", {
				"id": self.name,
				"date": self.date,
				"amount": self.amount,
				"income_type": self.income_type,
				"remark": self.remark
			})
		
		shift.save()
		frappe.db.commit()