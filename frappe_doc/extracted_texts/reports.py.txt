import frappe
from frappe.utils import getdate, today
@frappe.whitelist()
def get_cash_sales_number_card():
    total_cash = 0
    current_user = frappe.session.user
    user_roles = frappe.get_roles(current_user)

    # Check if user is a Hotel Manager
    if "Restaurant Admin" in user_roles:
        # Get all open shifts
        shifts = frappe.get_all("POS Shift", {"status": "Open"}, "name")
        
        # Fetch orders for each open shift
        for shift in shifts:
            orders = frappe.get_all("Food Order", {"shift": shift.name, "docstatus": 1})
            for order in orders:
                order_doc = frappe.get_doc('Food Order', order.name)
                if order_doc.customer:
                    customer = frappe.get_doc('Customer', order_doc.customer)
                    if customer.customer_group != "Management" and order_doc.status == "Completed":
                        total_cash += int(order_doc.total_amount)
    
    # For other users (Cashiers)
    else:
        # Get the shift for the current user
        shift = frappe.get_value("POS Shift", {"user": current_user, "status": "Open"}, "name")
        profile = frappe.get_value("POS Shift", shift, "pos_profile")
        
        # Fetch orders for the user's shift and profile
        orders = frappe.get_all("Food Order", {"shift": shift, "docstatus": 1, "pos_profile": profile})
        
        for order in orders:
            order_doc = frappe.get_doc('Food Order', order.name)
            if order_doc.customer:
                customer = frappe.get_doc('Customer', order_doc.customer)
                if customer.customer_group != "Management" and order_doc.status == "Completed":
                    total_cash += int(order_doc.total_amount)

    return {
        "value": total_cash,
        "fieldtype": "Currency",
        "route_options": {"from_date": today(), "to_date": today()},
        "route": ["query-report", "Permitted Documents For User"]
    }


@frappe.whitelist()
def get_credit_sales_number_card():
    total_credit = 0
    current_user = frappe.session.user
    user_roles = frappe.get_roles(current_user)

    # Hotel Manager can view all open shifts
    if "Restaurant Admin" in user_roles:
        shifts = frappe.get_all("POS Shift", {"status": "Open"}, "name")
        for shift in shifts:
            orders = frappe.get_all("Food Order", {"shift": shift.name, "docstatus": 1})
            for order in orders:
                order_doc = frappe.get_doc('Food Order', order.name)
                if order_doc.status == "Unpaid":
                    total_credit += int(order_doc.total_amount)

    # Cashiers can view their own shift's orders
    else:
        shift = frappe.get_value("POS Shift", {"user": current_user, "status": "Open"}, "name")
        profile = frappe.get_value("POS Shift", shift, "pos_profile")
        orders = frappe.get_all("Food Order", {"shift": shift, "docstatus": 1, "pos_profile": profile})
        for order in orders:
            order_doc = frappe.get_doc('Food Order', order.name)
            if order_doc.status == "Unpaid":
                total_credit += int(order_doc.total_amount)

    return {
        "value": total_credit,
        "fieldtype": "Currency",
        "route_options": {"from_date": today(), "to_date": today()},
        "route": ["query-report", "Permitted Documents For User"]
    }


@frappe.whitelist()
def get_management_sales_number_card():
    total_management = 0
    current_user = frappe.session.user
    user_roles = frappe.get_roles(current_user)

    # Restaurant Admin can view all management orders
    if "Restaurant Admin" in user_roles:
        shifts = frappe.get_all("POS Shift", {"status": "Open"})
        for shift in shifts:
            orders = frappe.get_all("Food Order", {"shift": shift.name, "docstatus": 1})
            for order in orders:
                order_doc = frappe.get_doc('Food Order', order.name)
                if order_doc.customer:
                    customer = frappe.get_doc('Customer', order_doc.customer)
                    if customer.customer_group == "Management" and order_doc.status == "Completed":
                        total_management += int(order_doc.total_amount)

    # Cashiers can view their own shift's management orders
    else:
        shift = frappe.get_value("POS Shift", {"user": current_user, "status": "Open"}, "name")
        profile = frappe.get_value("POS Shift", shift, "pos_profile")
        orders = frappe.get_all("Food Order", {"shift": shift, "docstatus": 1, "pos_profile": profile})
        for order in orders:
            order_doc = frappe.get_doc('Food Order', order.name)
            if order_doc.customer:
                customer = frappe.get_doc('Customer', order_doc.customer)
                if customer.customer_group == "Management" and order_doc.status == "Completed":
                    total_management += int(order_doc.total_amount)

    return {
        "value": total_management,
        "fieldtype": "Currency",
        "route_options": {"from_date": today(), "to_date": today()},
        "route": ["query-report", "Permitted Documents For User"]
    }

@frappe.whitelist()
def get_occupancy_rate():
    today_date = today()
    rooms = frappe.get_all("Rooms")
    total_rooms = len(rooms)
    occupied_rooms = 0
    for room in rooms:
        room_doc = frappe.get_doc('Rooms', room.name)
        if room_doc.room_status == "Checked In":
            occupied_rooms += 1
    if total_rooms == 0:
        return {
            "value": 0,
            "fieldtype": "Percent",
            "route_options": {"from_date": today_date, "to_date": today_date},
            "route": ["query-report", "Permitted Documents For User"]
        }
    return {
    "value": (occupied_rooms/total_rooms) * 100,
    "fieldtype": "Percent",
    "route_options": {"from_date": today_date, "to_date": today_date},
    "route": ["query-report", "Permitted Documents For User"]
    }