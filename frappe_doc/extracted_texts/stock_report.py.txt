import frappe
from frappe.utils import flt

@frappe.whitelist()
def get_stock_report():
    stock_report = {}
    # all teh items list and then get all the stock entry with purpose as Material transfer from store 
    stock_entry = frappe.get_all('Stock Entry', {'stock_entry_type': 'Material Transfer'})
    for se in stock_entry:
        entries = frappe.get_all('Stock Entry Detail', {'parent': se.name, 's_warehouse': 'Stores - BHR', 'item_code': ['!=', '']}, ['item_code', 'qty', 't_warehouse'])
        for entry in entries:
            item_code = entry.item_code
            qty = entry.qty
            t_warehouse = entry.t_warehouse
            if entry.t_warehouse == 'Main Bar - BHR':
                t_warehouse = 'main_bar'
            elif entry.t_warehouse == 'Staff Canteen - BHR':
                t_warehouse = 'staff_canteen'
            elif entry.t_warehouse == 'House Keeping - BHR':
                t_warehouse = 'house_keeping'
            elif entry.t_warehouse == 'Conference Beverage - BHR':
                t_warehouse = 'conference_beverage'
            elif entry.t_warehouse == 'Pool Bar - BHR':
                t_warehouse = 'pool_bar'
            elif entry.t_warehouse == 'Main Bar - BHR':
                t_warehouse = 'main_bar'
            elif entry.t_warehouse == 'Pizza - BHR':
                t_warehouse = 'pizza'
            elif entry.t_warehouse == 'Afra - BHR':
                t_warehouse = 'afra'
            elif entry.t_warehouse == 'Conference Food - BHR':
                t_warehouse = 'conference_food'
            elif entry.t_warehouse == 'Breakfast - BHR':
                t_warehouse == 'breakfast'
            elif entry.t_warehouse == 'Allacart - BHR':
                t_warehouse = 'allacart'
            elif entry.t_warehouse == 'Kitchen - BHR':
                t_warehouse = 'kitchen'


            if item_code not in stock_report:
                valuation_rate = frappe.db.get_value("Item", item_code, "valuation_rate") or 1
                stock_report[item_code] = {
                    'item_code': item_code,
                    'main_bar': 0,
                    'staff_canteen': 0,
                    'house_keeping': 0,
                    'conference_beverage': 0,
                    'pool_bar': 0,
                    'main_bar': 0,
                    'pizza': 0,
                    'afra': 0,
                    'conference_food': 0,
                    'breakfast': 0,
                    'allacart': 0,
                    'kitchen': 0,
                    'uom': frappe.db.get_value("Item", item_code, "stock_uom"),
                    'store_qty_balance': frappe.db.get_value("Bin", {"item_code": item_code}, "actual_qty"),
                    'valuation_rate': valuation_rate,
                    'sote_value': flt(valuation_rate) * flt(frappe.db.get_value("Bin", {"item_code": item_code}, "actual_qty"))

                }
            if t_warehouse in stock_report[item_code]:
                stock_report[item_code][t_warehouse] += flt(qty)
            else:
                stock_report[item_code][t_warehouse] = flt(qty)
            
    return stock_report.values()

@frappe.whitelist()
def get_item_purchases(item_code):
    purchases = frappe.get_all('Purchase Receipt Item', {'item_code': item_code}, ['item_code', 'qty', 'rate'])
    # get the purchase receipt item with item code and then get the qty
    return purchases
    