import{I as v,a as h}from"./index-DVMUZnKy.js";import{i as S,a as V,O as A,w as l,j as m,A as d,n as u,l as F,v as o,a5 as b}from"./frappe-ui-C71hWP7q.js";import k from"./FormView-CkoV2Gj0.js";import"./FormField-C4IZDyjM.js";import"./Link-jx0lJ6kO.js";import"./FileUploaderView-C58aW_OR.js";import"./workflow-C_QZStpA.js";import"./formatters-CZQ3OL1A.js";const O={__name:"ShiftAssignmentForm",props:{id:{type:String,required:!1}},setup(f){const i=S("$employee"),n=f,a=V({}),r=A({url:"hrms.api.get_doctype_fields",params:{doctype:"Shift Assignment"},auto:!0,transform(e){return n.id?e:e.filter(t=>!["employee","employee_name","status","company"].includes(t.fieldname))}});l(()=>a.value.employee,e=>{n.id&&e!==i.data.name&&p()}),l(()=>[a.value.start_date,a.value.end_date],([e,t])=>{c(e,t)});function p(){r.data.map(e=>e.read_only=!0)}function c(e,t){if(!(e&&t))return;const s=e>t?__("End Date cannot be before Start Date"):"",y=r.data.find(g=>g.fieldname==="start_date");y.error_message=s}function _(){a.value.employee=i.data.name}return(e,t)=>(m(),d(o(h),null,{default:u(()=>[F(o(v),{fullscreen:!0},{default:u(()=>[o(r).data?(m(),d(k,{key:0,doctype:"Shift Assignment",modelValue:a.value,"onUpdate:modelValue":t[0]||(t[0]=s=>a.value=s),isSubmittable:!0,fields:o(r).data,id:n.id,onValidateForm:_},null,8,["modelValue","fields","id"])):b("",!0)]),_:1})]),_:1}))}};export{O as default};
//# sourceMappingURL=ShiftAssignmentForm-C-k07lfA.js.map
